class Solution {
public:
    int countneighbour(vector<vector<int>>& board,int i,int j)
    {
        int count=0;
        for(int x=i-1;x<i+2;x++)
        {
            for(int y=j-1;y<j+2;y++)
            {
                if(x>-1 && x<board.size() && y>-1 && y<board[0].size())
                {
                    if(board[x][y]==1)
                    {
                        count++;
                    }
                }
            }
        }
        if(board[i][j]==1)
        {
            count--;
        }
        return count;
    }
    void gameOfLife(vector<vector<int>>& board) {
        vector<vector<int>> btemp=board;
        for(int i=0;i<board.size();i++)
        {
            for(int j=0;j<board[0].size();j++)
            {
                int n=countneighbour(board,i,j);
                if(board[i][j]==0 && n==3)
                {
                    btemp[i][j]=1;
                }
                else if(n<2 && board[i][j]==1){
                         btemp[i][j]=0;
                }
                else if(board[i][j]==1 && (n==2 || n==3))
                {
                    btemp[i][j]=1;
                }
                else if(n>3 && board[i][j]==1)
                {
                    btemp[i][j]=0;
                }
            }
        }
        board=btemp;
        btemp.clear();
    }
};
